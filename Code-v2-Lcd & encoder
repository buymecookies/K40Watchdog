# This script supports the Raspberry Pi Pico board
# Raspberry Pi Pico: http://educ8s.tv/part/RaspberryPiPico
# 20x4 I2C DISPLAY: http://educ8s.tv/part/20x4LCD


import board, busio, time, rotaryio, digitalio, countio

from lcd.lcd import LCD
from lcd.i2c_pcf8574_interface import I2CPCF8574Interface

# lcd settings
sda, scl = board.GP0, board.GP1
i2c = busio.I2C(scl, sda)
lcd = LCD(I2CPCF8574Interface(i2c, 0x27), num_rows=4, num_cols=20) #If address 0x27 does not work try 0x3F

# encoder settings
enc= rotaryio.IncrementalEncoder(board.GP3, board.GP4, 4 )
button = digitalio.DigitalInOut(board.GP2)
button.switch_to_input(pull=digitalio.Pull.DOWN)

# Flowmeter in settings
#pin_counter = countio.Counter(board.GP21, edge=countio.Edge.RISE)
#flow_frequency = 0

# gpio expander outputs


while True:
    position=enc.position
    if position == 0:
        lcd.set_cursor_pos(0, 1)
        lcd.print("#temp")
        lcd.set_cursor_pos(1, 2)
        lcd.print("test")
        lcd.set_cursor_pos(2, 2)
        lcd.print("code")
        lcd.set_cursor_pos(3, 2)
        lcd.print("mothafucker")
        lastPosition = position
        if lastPosition != position:
            pass
        else:
            time.sleep (1)
            print(position)
    if position == 1:
        lcd.set_cursor_pos(0, 2)
        lcd.print("temp")
        lcd.set_cursor_pos(1, 1)
        lcd.print("#test")
        lcd.set_cursor_pos(2, 2)
        lcd.print("code")
        lcd.set_cursor_pos(3, 2)
        lcd.print("mothafucker")
        lastPosition = position
        if lastPosition != position:
            pass
        else:
            time.sleep (1)
            print(position)
    if position == 2:
        lcd.set_cursor_pos(0, 2)
        lcd.print("temp")
        lcd.set_cursor_pos(1, 1)
        lcd.print("#code")
        lcd.set_cursor_pos(2, 2)
        lcd.print("motherfucker")
        lcd.set_cursor_pos(3, 2)
        lcd.print("opensource")
        lastPosition = position
        if lastPosition != position:
            pass
        else:
            time.sleep (1)
            print(position)
    if position == 3:
        lcd.set_cursor_pos(0, 2)
        lcd.print("code")
        lcd.set_cursor_pos(1, 1)
        lcd.print("#motherfucker")
        lcd.set_cursor_pos(2, 2)
        lcd.print("opensource")
        lcd.set_cursor_pos(3, 2)
        lcd.print("bitch")
        lastPosition = position
        if lastPosition != position:
            pass
        else:
            time.sleep (1)
            print(position)
    if position == 4:
        lcd.set_cursor_pos(0, 2)
        lcd.print("motherfucker")
        lcd.set_cursor_pos(1, 1)
        lcd.print("#opensource")
        lcd.set_cursor_pos(2, 2)
        lcd.print("bitch")
        lcd.set_cursor_pos(3, 2)
        lcd.print("monster")
        lastPosition = position
        if lastPosition != position:
            pass
        else:
            time.sleep (1)
            print(position)
    if position == 5:
        lcd.set_cursor_pos(0, 2)
        lcd.print("motherfucker")
        lcd.set_cursor_pos(1, 2)
        lcd.print("opensource")
        lcd.set_cursor_pos(2, 1)
        lcd.print("#bitch")
        lcd.set_cursor_pos(3, 2)
        lcd.print("monster")
        lastPosition = position
        if lastPosition != position:
            pass
        else:
            time.sleep (1)
            print(position)
    if position == 6:
        lcd.set_cursor_pos(0, 2)
        lcd.print("motherfucker")
        lcd.set_cursor_pos(1, 2)
        lcd.print("opensource")
        lcd.set_cursor_pos(2, 2)
        lcd.print("bitch")
        lcd.set_cursor_pos(3, 1)
        lcd.print("#monster")
        lastPosition = position
        if lastPosition != position:
            pass
        else:
            time.sleep (1)
            print(position)
        
   # while lastPosition == position:
      #  time.sleep (0.2)
        
    lcd.clear()
    
    
    
    
    
    


#loop encoder

#while True:
 #   position=enc.position
  #     lcd.print("switch")
   # lcd.print(str(flowin.value))
    #time.sleep(0.36)
    #lcd.clear()
    
    
#lcd.set_cursor_pos(0,1)
#lcd.print("click")

#time.sleep(5)
#lcd.clear()

